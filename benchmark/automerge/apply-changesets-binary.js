/*
 * This script applies a collection of changesets (as generated by create-changesets-binary.js)
 * This version uses Automerge.Text
 * 
 * */

const fs = require('fs');
const Automerge = require('automerge')
var args = process.argv.slice(2);
// The batch size (interval) is given as command line parameter
var dir = "./automerge-binary-"+args[0

// Initialize the state
let doc = Automerge.init()

// Save the starting time
const start = new Date()

// Read the changeset directory
fs.readdir(dir, (err, files) => {
  // For each changeset, apply the changes
  files.forEach(file => {
      console.log(`Applying changeset ${file}`)
	  const changes = fs.readFileSync(dir+"/"+file, null );
	  let [newdoc, patch] = Automerge.applyChanges(doc, [changes])
      doc = newdoc
  });
  console.log(`Changeset load time ${new Date() - start} ms`)
  const used = process.memoryUsage().heapUsed / 1024 / 1024;
  console.log(`Current memory usage ${Math.round(used * 100) / 100} MB`);
  const readstart = new Date()
  var txt = doc.text.toString()
  console.error(txt)
  console.log(`Read time ${new Date() - readstart} ms`)
});





